plugins {
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'maven-publish'
    id 'com.palantir.docker' version '0.36.0'
    id 'checkstyle'
    id 'jacoco'
}

checkstyle {
    configFile = 'config/checkstyle/checkstyle.xml' as File
    configProperties.suppressionsFile = file('config/checkstyle/suppressions.xml').absolutePath
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    implementation 'org.springframework:spring-webflux'

    implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'

    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17.1'
    implementation 'com.google.guava:guava:33.0.0-jre'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'jakarta.validation:jakarta.validation-api'

    implementation 'com.mysql:mysql-connector-j:8.3.0'
    implementation 'com.h2database:h2:2.2.224'
    implementation 'org.liquibase:liquibase-core:4.27.0'

    implementation 'com.github.ben-manes.caffeine:caffeine:3.2.1'

    implementation 'com.structurizr:structurizr-dsl:2.2.0'

    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.brave:brave-instrumentation-spring-rabbit'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testImplementation 'uk.org.webcompere:model-assert:1.0.3'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'com.h2database:h2:2.2.224'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
}

tasks.withType(JavaCompile).configureEach { options.encoding = "UTF-8" }
tasks.withType(JavaExec).configureEach { defaultCharacterEncoding = "UTF-8" }
tasks.withType(Javadoc).configureEach { options.encoding = "UTF-8" }
tasks.withType(Test).configureEach { defaultCharacterEncoding = "UTF-8" }

tasks.register('cleanLogs', Delete) { delete fileTree(dir: 'logs') }
tasks.named('clean') { dependsOn tasks.named('cleanLogs') }

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    enabled = false
}

bootJar {
    enabled = true
    archiveBaseName = 'insurance-calculator'
    archiveVersion = '1.0.2'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            // Identify the artifact
            artifact bootJar  // This refers to the Spring Boot's bootJar task

            // Project coordinates
            groupId = 'lv.javaguru'
            artifactId = 'insurance-calculator'
            version = '1.0.2'

            // Add other metadata as needed
            pom {
                name = 'Insurance Calculator Application'
                description = 'Application to calculate travel insurance premium'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
            }
        }    }

    // Configure the repository location (local Maven repository)
    repositories {
        mavenLocal()
    }
}

docker {
    dependsOn bootJar
    name "insurance-calculator:1.0.2"
    files 'build/libs/insurance-calculator-1.0.2.jar'
    files 'wait-for-it.sh'
    buildArgs(['JAR_FILE': "insurance-calculator-1.0.2.jar"])
}

tasks.named('dockerPrepare').configure {
    dependsOn bootJar // Explicit dependency on bootJar
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}
